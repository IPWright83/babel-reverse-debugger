// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Function Decorators Converts Arrow function correctly 1`] = `
""use strict";

var subtract = function subtract(a, b) {
  ___instrumentFunction("ArrowFunctionExpression", "subtract", 1, {
    a: a,
    b: b
  });
  return ___instrumentReturn("ReturnStatement", 1, a - b);
};"
`;

exports[`Function Decorators Converts Basic function correctly 1`] = `
""use strict";

/**
 * This is the add function with a comment
 * to test that the line numbers work correctly
 */
function add(a, b) {
  ___instrumentFunction("FunctionDeclaration", "add", 5, {
    a: a,
    b: b
  });
  return ___instrumentReturn("ReturnStatement", 6, a + b);
}"
`;

exports[`Function Decorators Converts Does New Function object correctly 1`] = `
""use strict";

new Function('return 42');"
`;

exports[`Function Decorators Converts Does not New Function object correctly 1`] = `
""use strict";

new Function('return 42');"
`;

exports[`Function Decorators Converts IIFE correctly 1`] = `
""use strict";

(function (a, b) {
  ___instrumentFunction("FunctionExpression", "anonymous", 1, {
    a: a,
    b: b
  });
  return ___instrumentReturn("ReturnStatement", 2, a + b);
})(3, 4);"
`;

exports[`Function Decorators Converts New Function by skipping it correctly 1`] = `
""use strict";

new Function('return 42');"
`;

exports[`Function Decorators Converts Object with arrow function (explicit return) correctly 1`] = `
""use strict";

var calculator = {
  add: function add(a, b) {
    ___instrumentFunction("ArrowFunctionExpression", "add", 2, {
      a: a,
      b: b
    });
    return ___instrumentReturn("ReturnStatement", 2, a + b);
  }
};"
`;

exports[`Function Decorators Converts Object with arrow function (implicit return) correctly 1`] = `
""use strict";

var calculator = {
  multiply: function multiply(a, b) {
    ___instrumentFunction("ArrowFunctionExpression", "multiply", 2, {
      a: a,
      b: b
    });
    return ___instrumentReturn("ReturnStatement", 2, a * b);
  }
};"
`;

exports[`Function Decorators Converts Object with function (no return) correctly 1`] = `
""use strict";

var calculator = {
  clear: function clear() {
    ___instrumentFunction("ArrowFunctionExpression", "clear", 2, {});
    return;
  },
  cancel: function cancel() {
    ___instrumentFunction("ArrowFunctionExpression", "cancel", 3, {});
  }
};"
`;

exports[`Function Decorators Converts Object with function correctly 1`] = `
""use strict";

var calculator = {
  subtract: function subtract(a, b) {
    ___instrumentFunction("FunctionExpression", "subtract", 2, {
      a: a,
      b: b
    });
    return ___instrumentReturn("ReturnStatement", 2, a - b);
  }
};"
`;

exports[`Function Decorators Converts Object with functions correctly 1`] = `
""use strict";

var calculator = {
  add: function add(a, b) {
    ___instrumentFunction("ArrowFunctionExpression", "add", 2, {
      a: a,
      b: b
    });
    return ___instrumentReturn("ReturnStatement", 2, a + b);
  },
  subtract: function subtract(a, b) {
    ___instrumentFunction("FunctionExpression", "subtract", 3, {
      a: a,
      b: b
    });
    return ___instrumentReturn("ReturnStatement", 3, a - b);
  },
  multiply: function multiply(a, b) {
    ___instrumentFunction("ArrowFunctionExpression", "multiply", 4, {
      a: a,
      b: b
    });
    return ___instrumentReturn("ReturnStatement", 4, a * b);
  },
  divide: function divide(a, b) {
    ___instrumentFunction("ArrowFunctionExpression", "divide", 5, {
      a: a,
      b: b
    });
    return ___instrumentReturn("ReturnStatement", 5, a / b);
  },
  clear: function clear() {
    ___instrumentFunction("FunctionExpression", "clear", 6, {});
    return;
  },
  cancel: function cancel() {
    ___instrumentFunction("ArrowFunctionExpression", "cancel", 7, {});
  }
};"
`;
